# Mundlejs

Module bundler, cacher, and client-side loader  
Demonstration:
http://screencast.com/t/nOU53BRYUAX
Discussion:
https://groups.google.com/forum/?fromgroups#!topic/nodejs/BQn0aH1qTpE

## Installation
npm install mundle

## Usage
### Client-side
* Include node_modules/mundle/lib/client.js on your page
* require('somePath', function(error,exportsFromSomePath){console.log(exportsFromSomePath);})
* somePath can be
  * 'moduleName' resolves to server-side basePath/moduleName.js
  * './some/relative/path/to/file.js' resolves to server-side basePath/some/relative/path/to/file.js

### Server-side
* serverRequire = require('mundle')
* serverRequire.setBasePath('pathToMakeTheClient-sideRoot')
* capture your client-side requests and pass them to serverRequire:
  * serverRequire('path',alreadyLoadedModules,callback)
  * alreadyLoadedModules is an object with fileName:boolean key:value pairs
  * callback is a function(errors,results) where
    * errors is an array of any errors
    * results is an object with fileName:contents of the required file and all dependencies
    * inside callback you should respond to the client-side request with a json stringified {errors:errors, results:results}

## Advanced usage
* client-side- window.require.setRequestPath adds a path to the xhr call:
  * http://<location.hostname>:<location.port>/<requestPath></file requested>?alreadyLoadedModule=1&anotherAlreadyLoaded=1&.....

## Contribute
* Suggestions of how to make this more useful/robust/pluginable/available to more people very welcome
* Improve compatibility with Commonjs module specification
* Bug reports
* Pull requests

## Coming soon
* cacheing
  * client-side
  * server-side
      * dependency trees
      * actual bundles


Copyright (C) 2012 Saleem Abdul Hamid   
Licensed under the GPL license